# tester.py

from movement import Board
import combat


print("Place Piece Anywhere")
print("\n")
board = Board()
board.place_piece_anywhere(1, 'Infantry', 0, 3, 10)
board.place_piece_anywhere(2, 'Archer', 1, 9, 7)
board.place_piece_anywhere(3, 'Cavalry', 2, 13, 5)
board.place_piece_anywhere(4, 'Wizard', 3, 15, 3)
print("\n\n\n")

#print("Grid 0:\n",board.grids[0])
#print("\n")
#print("Grid 1:\n",board.grids[1])
#print("\n")
#print("Grid 2:\n",board.grids[2])
#print("\n")
#print("Grid 3:\n",board.grids[3])
#print("\n")

print("Move Piece")
print("\n")
board.place_piece_anywhere(2, 'Infantry', 0, 4, 10)
board.move_piece(2, 0, 4, 5)
print("\n\n\n")

#print("Grid 0:\n",board.grids[0])
#print("\n")
#print("Grid 1:\n",board.grids[1])
#print("\n")
#print("Grid 2:\n",board.grids[2])
#print("\n")
#print("Grid 3:\n",board.grids[3])
#print("\n")

print("Detect Enemy")
print("\n")
board.place_piece_anywhere(3, 'Archer', 0, 15, 7)
enemies = board.detect_enemy_on_base_space(1)
print(f"Enemies on base space: {enemies}")
print("\n\n\n")

#print("Grid 0:\n",board.grids[0])
#print("\n")
#print("Grid 1:\n",board.grids[1])
#print("\n")
#print("Grid 2:\n",board.grids[2])
#print("\n")
#print("Grid 3:\n",board.grids[3])
#print("\n")

print("Tower Defense")
print("\n")
board.tower_defense(1)
print("\n\n\n")

#print("Grid 0:\n",board.grids[0])
#print("\n")
#print("Grid 1:\n",board.grids[1])
#print("\n")
#print("Grid 2:\n",board.grids[2])
#print("\n")
#print("Grid 3:\n",board.grids[3])
#print("\n")

print("Update Piece")
print("\n")
board.update_piece(1, 'Infantry', 0, 3, 20)
print("\n\n\n")

#print("Grid 0:\n",board.grids[0])
#print("\n")
#print("Grid 1:\n",board.grids[1])
#print("\n")
#print("Grid 2:\n",board.grids[2])
#print("\n")
#print("Grid 3:\n",board.grids[3])
#print("\n")

print("Board Swap")
print("\n")
board.place_piece_anywhere(1, 'Archer', 1, 6, 7)
board.swap_between_boards(1, 0, 3, 1, 6)
print("\n")
board.place_piece_anywhere(1, 'Wizard', 3, 10, 1)
board.swap_between_boards(1, 3, 10, 0, 1)
print("\n\n\n")

#print("Grid 0:\n",board.grids[0])
#print("\n")
#print("Grid 1:\n",board.grids[1])
#print("\n")
#print("Grid 2:\n",board.grids[2])
#print("\n")
#print("Grid 3:\n",board.grids[3])
#print("\n")

print("Find Piece")
print("\n")
location = board.find_piece_location(1, 'Infantry')
print(f"Piece location: {location}")
print("\n\n\n")

print("Moves Visualizer")
print("\n")
board.print_valid_moves(board, 'Infantry', 0, 2, 0)
board.print_valid_moves(board, 'Archer', 1, 3, 1)
board.print_valid_moves(board, 'Cavalry', 2, 2, 2)
board.print_valid_moves(board, 'Wizard', 2, 4, 3)
print("\n\n\n")

print("Targeting List")
print("\n")
board = Board()

#initialize boards however you want, please play around with it to ensure robustness.
board.place_piece_anywhere(1, 'Infantry', 0, 3, 10)
board.place_piece_anywhere(1, 'Archer', 0, 7, 10)
board.place_piece_anywhere(2, 'Wizard', 0, 2, 1)
board.place_piece_anywhere(2, 'Infantry', 0, 1, 10)
board.place_piece_anywhere(3, 'Wizard', 1, 7, 10)
print("\n")

print("Grid 0:\n",board.grids[0])
print("\n")
targets = combat.calculate_attack_range(board, 1, 0)
print(f"Player 1 Grid 0 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")
targets = combat.calculate_attack_range(board, 2, 0)
print(f"Player 2 Grid 0 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")

print("Grid 1:\n",board.grids[1])
print("\n")
targets = combat.calculate_attack_range(board, 2, 1)
print(f"Player 2 Grid 1 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")
targets = combat.calculate_attack_range(board, 3, 1)
print(f"Player 3 Grid 1 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")

print("Grid 2:\n",board.grids[2])
print("\n")
targets = combat.calculate_attack_range(board, 3, 2)
print(f"Player 3 Grid 2 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")
targets = combat.calculate_attack_range(board, 4, 2)
print(f"Player 4 Grid 2 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")

print("Grid 3:\n",board.grids[3])
print("\n")
targets = combat.calculate_attack_range(board, 4, 3)
print(f"Player 4 Grid 3 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")
targets = combat.calculate_attack_range(board, 1, 3)
print(f"Player 1 Grid 3 targets (First element per 1d array is the attacking piece): {targets}")
print("\n")
print("\n\n\n")

print("Attack Sequence")
print("\n")

print("Grid 0 before attack:\n",board.grids[0])
print("\n")

combat.attack_sequence(board, 0, 2, 3)
print("\n")

print("Grid 0 after attack:\n",board.grids[0])
print("\n")
print("\n\n\n")